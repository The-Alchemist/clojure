---
# Practicalli Clojure
site_name: Practicalli Clojure
site_url: https://practical.li/clojure
site_description: Practical guide to Clojure programming language and Clojure REPL driven development
site_author: Practicalli
copyright: Copyright &copy 2023  Practicali <a href="https://creativecommons.org/licenses/by-sa/4.0/">CC BY-SA 4.0</a>
repo_url: https://github.com/practicalli/clojure/
edit_uri: https://github.com/practicalli/clojure/edit/main/docs/

# Deployment
# remote_name: origin
remote_branch: gh-pages # deployment branch

# Theme and styling
theme:
  name: material
  logo: assets/images/practicalli-logo.png
  favicon: assets/favicon.svg
  features:
    - navigation.top
    - content.code.annotate
    - content.tabs.link
    - navigation.instant # Avoid page reloading for internal links
    - navigation.tracking # Update URL with anchor
    - navigation.indexes # Nav sections can have files
  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: blue
      accent: teal
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: indigo
      accent: teal
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
  # Override theme
  # custom_dir: overrides

extra_css:
  - assets/stylesheets/extra.css

## Additional styling
markdown_extensions:
  - admonition
  - pymdownx.details
  - pymdownx.superfences
  - attr_list
  - md_in_html # Grids
  - footnotes # footnotes and abbreviations
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.keys # keyboard keys
  - pymdownx.magiclink
  - def_list # lists
  - pymdownx.tasklist:
      custom_checkbox: true # checkboxes
  - toc:
      permalink: λ︎

## Plugins
plugins:
  # Explicitly add search plugin when defining plugins in this configuration file
  - search
  - callouts
  - glightbox # Image aligning
  - git-revision-date-localized: # Update and Creation date of each page
      # enable_creation_date: true
      fallback_to_build_date: true

  # Generate Social Cards via CI only
  # in assets/images/social
  - social:
      cards: !ENV [MKDOCS_SOCIAL_CARDS_GENERATE, true]

  # Redirect pages when moved or changed
  - redirects:
      redirect_maps:
        repl-driven-development.md: introduction/repl-workflow.md
        clojure-cli/data-browsers: data-inspector/

# Footer / Social Media
extra:
  social:
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/in/jr0cket/
    - icon: fontawesome/brands/slack
      link: https://clojurians.slack.com/messages/practicalli
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/practical_li
    - icon: fontawesome/brands/github
      link: https://github.com/practicalli
    - icon: fontawesome/brands/docker
      link: https://hub.docker.com/u/practicalli

# Navigation
nav:
  - Introduction:
      - Overview: index.md
      - Clojure in Fifteen Mins: introduction/clojure-in-15-minutes.md
      - REPL Workflow: introduction/repl-workflow.md
      - Concepts:
          - introduction/concepts/index.md
          - Functional vs Imperative: introduction/concepts/what-is-functional-programming.md
          - From The Author: introduction/concepts/clojure-made-simple.md
          # - introduction/concepts/purpose.md
      # - introduction/learning-clojure.md
      # - introduction/who-uses-clojure.md
      - Contributing: introduction/contributing.md
      - Writing Tips: introduction/writing-tips.md
  - Install:
      - install/index.md
      - Java Host: install/java.md
      - Clojure CLI: install/clojure-cli.md
  - Clojure CLI:
      - clojure-cli/index.md
      - clojure-cli/built-in-commands.md
      - Practicalli Config: clojure-cli/practicalli-config.md
      - HotLoad Libraries: clojure-cli/hotload-libraries.md
  - Terminal REPL:
      - clojure-cli/repl/index.md
      - REPL Coding: clojure-cli/repl/coding.md
      - REPL Libraries: clojure-cli/repl/libraries.md
      - REPL Help: clojure-cli/repl/help.md
      - REPL troubleshoot: clojure-cli/repl/troubleshooting.md
      # <!-- - clojure-cli/repl/repl-uncovered.md --> <!-- TODO rewrite -->
  - REPL Startup: clojure-cli/repl-startup.md
  - Clojure Projects:
      - clojure-cli/projects/index.md
      - From Template: clojure-cli/projects/create-from-template.md
      - Add Libraries: clojure-cli/projects/add-libraries.md
      - Namespaces: clojure-cli/projects/namespace.md
      - Rich Comment: clojure-cli/projects/rich-comments.md
      - Hotload in Project: clojure-cli/projects/hotload-in-project.md
      - Migrate projects: clojure-cli/projects/migrate-project.md
      - Package: clojure-cli/projects/tools-build.md
  - Clojure Editors:
      - clojure-editors/index.md
      - Clojure LSP:
          - clojure-editors/clojure-lsp/index.md
          - Clojure LSP Snippets: clojure-editors/clojure-lsp/snippets.md
          - Practicalli Snippets: clojure-editors/clojure-lsp/practicalli-snippets.md
      - Editor Install Guides:
          - clojure-editors/editor-install-guides/index.md
          - clojure-editors/editor-install-guides/atom-protorepl.md
          # - clojure-editors/editor-install-guides/atom-proton.md
          - clojure-editors/editor-install-guides/emacs-spacemacs.md
          - clojure-editors/editor-install-guides/emacs.md
          - clojure-editors/editor-install-guides/neovim-conjure.md
          - clojure-editors/editor-install-guides/vim-plugins.md
          - clojure-editors/editor-install-guides/spacevim-fireplace.md
          - clojure-editors/editor-install-guides/spacevim-configuration.md
          - clojure-editors/editor-install-guides/vspacecode-calva.md
          - clojure-editors/editor-install-guides/vscode-calva.md
          - clojure-editors/editor-install-guides/intellij-cursive.md
      - Editor User Guides:
          - clojure-editors/editor-user-guides/index.md
          - clojure-editors/editor-user-guides/atom-protorepl.md
          # - clojure-editors/editor-user-guides/atom-proton.md
          - clojure-editors/editor-user-guides/emacs-spacemacs.md
          - clojure-editors/editor-user-guides/neovim-conjure.md
          - clojure-editors/editor-user-guides/spacevim-fireplace.md
          - clojure-editors/editor-user-guides/vspacecode-calva.md
          - clojure-editors/editor-user-guides/vscode-calva.md
          - clojure-editors/editor-user-guides/intellij-cursive.md
  - Data Inspectors:
      - data-inspector/index.md
      - data-inspector/clojure-inspector.md
      - Portal: data-inspector/portal.md
  - Code Challenges:
      - coding-challenges/index.md
      - 4 Ever Clojure:
          - coding-challenges/4clojure/index.md
      - Exercism:
          - coding-challenges/exercism/index.md
          - coding-challenges/exercism/rna-transcription.md
          - coding-challenges/exercism/hamming.md
          - coding-challenges/exercism/space-age.md
          - Bob: coding-challenges/exercism/bob.md
            # - coding-challenges/exercism/bob-string-approach.md
            # - coding-challenges/exercism/bob-regular-expression-approach.md
      - CodeWars: coding-challenges/codewars/index.md
      - Advent Of Code: coding-challenges/advent-of-code.md
      - Simple projects:
          - simple-projects/index.md
          - Random Function: simple-projects/random-clojure-function.md
          - Salary Calculator: simple-projects/salary-calculator.md -->
          - Encoder Decode:
              - simple-projects/encode-decode/index.md
              - simple-projects/encode-decode/convert-boolean-values.md
              - simple-projects/encode-decode/caesar-cipher-rot13.md
              - simple-projects/encode-decode/rna-dna.md
              - simple-projects/encode-decode/clacks.md
          - Data Transform:
              - simple-projects/data-transformation/index.md
              - simple-projects/data-transformation/most-common-word.md
          - Kata:
              - simple-projects/tdd-kata/index.md
              - Recent Song list: simple-projects/tdd-kata/recent-song-list.md
      - Games:
          - games/index.md
          # Convert to deps.edn
          - TicTacToe:
              - games/tictactoe-cli/index.md
  - Testing:
      - testing/index.md
      - Unit Testing:
          - testing/unit-testing/index.md
          - testing/unit-testing/configure-projects-for-tests.md
          - testing/unit-testing/require-test-namespaces.md
          - testing/unit-testing/writing-unit-tests.md
          - testing/unit-testing/fixtures.md
          - testing/unit-testing/test-selectors.md
          # <!-- - [TDD Kata: Recent Song-ltesting/unit-testing/tdd-kata/recent-song-list.md -->
          # <!-- - testing/unit-testing/clojure-test-expectations.md -->
      - Test runners:
          - testing/test-runners/index.md
          - testing/test-runners/congnitect-labs-test-runner.md
          - testing/test-runners/kaocha-test-runner.md
          - testing/test-runners/example-projects.md
  - Clojure Spec:
      - clojure-spec/index.md
      - clojure-spec/using-spec-in-the-repl.md
      - clojure-spec/add-spec-to-projects.md
      - clojure-spec/organising-specs.md
      - Data Specs:
          - clojure-spec/data/index.md
          - clojure-spec/data/predicate-specifications.md
          - clojure-spec/data/literal-values.md
          - clojure-spec/data/conform.md
          - clojure-spec/data/valid-q.md
          - clojure-spec/data/explain.md
          - clojure-spec/data/defining-specifications.md
          - clojure-spec/data/registry.md
          - clojure-spec/data/entity-maps.md
          - clojure-spec/data/map-literals.md
          - clojure-spec/data/and-or-specifications.md
          - clojure-spec/data/composite-specifications.md
          - clojure-spec/data/hierarchical-specifications.md
      - Function Specs:
          - clojure-spec/functions/index.md
          - clojure-spec/functions/function-definition-specifications.md
          - clojure-spec/functions/documentation.md
          - clojure-spec/functions/higher-order-functions.md
      - Testing:
          - clojure-spec/testing/index.md
          - clojure-spec/testing/checking arguments.md
          # <!-- - clojure-spec/defining-specifications/index.md -->
          - Generative Testing:
              - clojure-spec/generative-testing/index.md
              - clojure-spec/generative-testing/predicate-generators.md
              # <!-- - clojure-spec/generative-testing/generating-generators.md -->
              - clojure-spec/generative-testing/example-projects/index.md
              - clojure-spec/generative-testing/example-projects/next-jdbc.md
      - Spec Project:
          - clojure-spec/projects/index.md
          # <!-- Checking for bad names in ns declarations, lets, etc. -->
          # <!-- - clojure-spec/projects/convention-checks.md -->
          - Playing Cards:
              - clojure-spec/projects/card-game/index.md
              - clojure-spec/projects/card-game/playing-card-specifications.md
              - clojure-spec/projects/card-game/generative-data-from-specifications.md
              - clojure-spec/projects/card-game/game-specifications.md
              - clojure-spec/projects/card-game/function-specifications.md
              - clojure-spec/projects/card-game/organising-instrumentation.md
          - Bank Account:
              - clojure-spec/projects/bank-account/index.md
              # <!-- - clojure-spec/projects/bank-account/create-project.md -->
              - clojure-spec/projects/bank-account/write-failing-tests.md
              - clojure-spec/projects/bank-account/customer-details-specification.md
              - clojure-spec/projects/bank-account/validate-customer-details-specification.md
              - clojure-spec/projects/bank-account/account-holder-specification.md
              - clojure-spec/projects/bank-account/generate-test-data.md
              - clojure-spec/projects/bank-account/unit-tests-with-spec.md
              - clojure-spec/projects/bank-account/function-specifications.md
              - clojure-spec/projects/bank-account/test-functions-against-spec.md

  - Continuous Integration:
      - continuous-integration/index.md
      - Circle CI:
          - continuous-integration/circle-ci/index.md
          - continuous-integration/circle-ci/random-clojure-function.md
          - continuous-integration/circle-ci/status-monitor.md
          # <!-- - continuous-integration/circle-ci/circle-ci-sample-project.md -->
          - continuous-integration/github-actions/index.md
          - continuous-integration/github-actions/clj-kondo-lint.md
  # <!-- - testing/performance-testing/index.md -->
  # <!-- - testing/load-stress-testing/index.md -->

  - Reference:
      - Clojure CLI:
      - Code Analysis: reference/code-analysis.md
      - Crreative Coding:
          - reference/creative-coding/index.md
